import 'package:flutter/cupertino.dart';import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:flutter_timer/bloc/timer_bloc.dart';class TimerActions extends StatelessWidget {  @override  Widget build(BuildContext context) {    return Row(      mainAxisAlignment: MainAxisAlignment.spaceEvenly,      children: _mapStateToActionButtons(        timerBloc: BlocProvider.of<TimerBloc>(context),      ),    );  }  List<Widget> _mapStateToActionButtons({    required TimerBloc timerBloc,  }) {    final TimerState currentState = timerBloc.state;    if (currentState is TimerInitial) {      return [        CupertinoButton(          child: Icon(            CupertinoIcons.play_arrow_solid,            size: 100,          ),          onPressed: () => timerBloc.add(TimerStarted(duration: currentState.duration)),        ),      ];    }    if (currentState is TimerRunInProgress) {      return [        CupertinoButton(          child: Icon(            CupertinoIcons.pause,            size: 100,          ),          onPressed: () => timerBloc.add(TimerPaused()),        ),        CupertinoButton(          child: Icon(            CupertinoIcons.restart,            size: 100,          ),          onPressed: () => timerBloc.add(TimerReset()),        ),      ];    }    if (currentState is TimerRunPause) {      return [        CupertinoButton(          child: Icon(            CupertinoIcons.play_arrow_solid,            size: 100,          ),          onPressed: () => timerBloc.add(TimerResumed()),        ),        CupertinoButton(          child: Icon(            CupertinoIcons.restart,            size: 100,          ),          onPressed: () => timerBloc.add(TimerReset()),        ),      ];    }    if (currentState is TimerRunComplete) {      return [        CupertinoButton(          child: Icon(            CupertinoIcons.restart,            size: 100,          ),          onPressed: () => timerBloc.add(TimerReset()),        ),      ];    }    return [];  }}